def parse_fasta(s):
    results = {}
    strings = s.strip().split('>')

    for s in strings:
        if len(s) == 0:
            continue

        parts = s.split()
        label = parts[0]
        bases = ''.join(parts[1:])

        results[label] = bases

    return results

def compute_gc_content(dna):
    if(len(dna)):
        count_G_C = 0
        for ch in dna:
            if ch == 'G' or ch == 'C':
                count_G_C += 1
        return count_G_C / len(dna) * 100
    else:
        return 0

if __name__ == '__main__':
    data = {}
    # with open("DataSample\\rosalind_gc.txt", "r") as f:
    data = parse_fasta(""">Rosalind_3670
TCAAGCCCCCAACACCCCCGAGTCTTCTCCACCCAGATTGATACTTCACATATTCCTAAT
ACGTCGCTTCTCGGTGAAGCTTGCATGCTTGATTACCGGTCCTATGCCGATAGCTCAGGA
GAATGCCTGGTTTTGCTCATCAGCACGCTCGCTTCCACGATCACTGTCGTCCTCCGGCTG
TATAGCGGCAACCTTCCGTCGGCTCCTGAGCGGCTCGCCAAATATACTCACTTTTCCACC
CGAAGGGGGTTAACTCGACGCAGGCAGGAAGTCGGGGCCAGTTAGGGGCTGCATGTCGCA
CCCGGACTCGGTTTCAACTATCACCTGGCGTTTGTCAACTCAATCGTACAAGGATCGTGC
AGAATAGATCAAACCAACGTCTTTGTTGGGCCAGCGAGATGGAGTGGTGTAACCCACGTG
ATTCCGTAGGCACGCTCGCAGGTTAGCGGTAACAGCCGAATGTTCACAAGGCGAAACCCT
AGGTCGCTTCAGCGAATCCTTGTCTTAGCTCGCTGAACGAATTTCGTGACAGCGCAGGCT
TCTCAATAAATGTGCAAATCACTGTGAACAAGTATGGTCATCTGGTATGTTGGGGCAGCA
GCCTGCTACCTTCGGTTGCCAATCCTTAGAGGTTATGCACCGGGACCCAGGATTCTGTCT
ACCGAGTCGTTGAGCCCCGTGCCTTGGTCTGTGTTGCGTGCAGCCCTCACTATTTATGTT
TGGGTTGTCAAAGTTAGATCTAGTTTGGTTGCACTAGACATAGTGGCCTCCAATTCGGGG
TGATCAGCGAGCCACCCACGGAGCCACTGGTGTGGAAGTCCTGGAGGTGAAAGCAGTTTG
ATGGGGGTCAATGGCGTAGTTCCCCCGACAGATGAATGACCCACATTTTAAGAACAATGC
>Rosalind_8239
TGGTAATGTATGCGTGAACTTGCGACCACACTACTTTAAGCCAACCTTGTTACATGTGAC
TACGATAGGTTAGCCATCACCCCATAATTCTCGCCCGCCTTACCATACAGGTAGGGCTGT
AAGTACATATCGTCTAAGCAGGGATCTACGGAGTAATTCCCCACAGAACATAAGATGTCA
CCCGGTGGCCAACCACAATTACTACAAGTAATTATTGTGGAGACCGGGGACATCGCGGGC
CGGTGTGTGTTGTTCGTGCATTACCAGGGCGCCCGAGTTGCCGAGCGTATTGAGAACTAG
TCACAATTATTCCGCCACGGTTACTACTCAGAAAAAGAAAGTCCTATTGTTAGATTCGGA
GATCTGAAATTGGAACCAGAAAAGGCCGGTGAATTTGCCATAAACACGGATATACAAGTA
AGATATGTTGGCGTAGGTAGTCGCATTAATGCTGGCCTGATGCCCTTGGGCCCCACGCGT
CTCTTTGGACATCGCTTGATGATTTACCTATAATTTGTATGTGGAAAATAAAGTTTTGAT
GCTTTGGGCTTAACCGAGGAGATTTATCGCGTGCAGAAGTCGCCTGAACATATCCGTTTT
CAAAGTTTATTTTAGGCACCGGGGTAGCTTCGCACTCATTGCGTCTGCTCTGATATTTAA
CCGGCCGTACAGTGCGACTGGGGGACCAACGTCTCTTTAAGGCGGCGTAGGGTATCCGTC
GTCTCAACAGCATTGCGGAGCGTCGTGGGCAACGTTGTATGCTGTATGTGGACGAAGCCC
ATACTAACGTTGTGACGGTTATGTTCTTTTTATTAAAGTAGTGGCC
>Rosalind_9920
CATCGGATAAACGGACCGGGTAATCTGGAACTGGTTTAATGGGTTAACATGCCTGAAGGT
CGGTGAAATTTCCTACTTCATGAGAACTCCTTTGGCTTGGAATAGAGGGACTATTGATGC
GGCAAACTCTATATTCTTATAGCAAGGTTTTATTGCATATTGGGAGGCCACAACTTCTAA
AGGCATTACAATGACAAAAGGCGATGGCCACATATTGACTACTCCGTCTCCAGCGCGGCT
TTCACCATGTGCTAAAGGAACATGTTTCAGCGTGCACCCTGGGAAGACCTTTGGTTCTTG
GAACCACCAGATACAACTACGAGGCGACACGTAACGCTAGCTGCACAGAGGGTTATGGGC
ACAGACGCAAACACAGACAATGATGCCATCACACGCGAGGGTAGACTCTACCATCCCGGT
CAACCGAGCAGAGTTCTGCGCAGTCTCAGTGTTTATTTCACGCAAGAGTGGATTACACAA
GCGCGCCTAATCTGCGTACAATAGCCACGCTGCAAATGGAGCGATGATGAACTCAGTGAA
TGATACCAAATCATATTCTATTAGGTACGACTATTAAATCACCAAAGGGGATGGTCGAGG
GGCCAGGAACTCTGACCGGTCATCGCTTATGCGATCCTGCCGCCCGATACTGGTGGCGCA
CTTGATAGACTAACCACTGAGGACATTCCAGCCACAGAATTCCGATACACAAGGTTCCTA
CCATCGATAAGTATTGTAGTCCATTATCTGTCGTTTCGTAGGGAACACAGCATGATCCAG
GTCAAAGGTCGCAGGGCCATTTGTGTGCAGAGCCAAAAATCAGTACCGCCGGTGCTACCT
GATAGGTGACCAATTGACATCCCTCTATTTCTTCACGCCCACACCTGATTGTACCATCGA
ACGCGCTAAGCTGGAAAATAGTTT
>Rosalind_8978
ATTTAGAAAGTCTGATTTGTGAGGAAAAAGAAGATACAATAAGCACAGTCTTCAGAAAAG
GTTACGGAACCAAAGGGCTAACTACTCATAACACACGCCAATCGGCACGATTCTTCCCCG
GCACTATAAATCACGGTTCCCACAGATCACTGATTTATTCCATTAAATATTGGTGTCACA
TAGCTCCCTATACTCCCCGTGGCATTTTGAATTAGACCTTTGGTTGACTCCTTCCTCCAA
TTCCGAAAACAACGAAGATACAACCGAACAACGGGCGATCAATAGCACTTAGATGAGCCT
AAAACGGCCTACCGGGGTGCCACTCTACATTCACCCAGGGACTCCGGATAGGGATCCGGC
CGATAGCTGTACTTAAGAGAGGACTGATTGGCGGCTTGTAGCCTGACTCGACAATAACCA
TGCACAGACGGACGGTTGAAGACATCCATATTTGCAGATTTACAACAGTTTGTTGCAGCT
AAGTAGGCTAGACCTCGGTGTACTCGGCCATTATCCACGGTTCATTTATGAGTTATGACA
TCGGTAGGGCTGCTGGACTTCCGTTTGAATCGGAAACGGCTGCGCTCTGATTGGTGGGTC
ATGAATACCGCAATTGCTCTGTCGTGCGTGGCGGTGCTTTAAAGTCTTTCAATCAACCCA
ATAGCGGCTGTCTGGAGATTATCGGTACGAACGTCGTCTTAATGTATCGCGCCTGCGATT
AGACATGGGTCAGCCTCAACACGACTCAACCCGGGTGCGGATGTTAGGGTCCCGCATAAG
GATCCAAGGATCCTAATCTTGCTTAATAAATAACGACTAACACGGACCCGCGAACCATAG
GACGCATGTGCTGTTGACTTTCACGCGTGATAGAGCATGTCTGAGTAACACGCGTGGAGG
CAACTTGGATACAGGCG
>Rosalind_1799
CAAACTCTCGGAACGGCGCTAGTGAGAACCTGGTCGACACTGAGTAACGAACATTCCTCG
AAGGCTCCCGAACTTGAACGCCGTCTCGCGCTTGCATGTGCAACGGTGGACAAAGTGCCC
GAAGAATTGTACCCCCCGCGAACCCAGGTCATGCCAGTGTCGCTTCGTCCAGACCAGCGG
TACCTGCAATGAACCACGGCTTGAGGCCCGGGTACCATACTGCCCTTCCTCAGTAGGTAA
TATGTTACAGAATACATCAGTCAACTAGTGGTTGAAACATACGAATAGACCCCGGTATCT
CGCCACGGCGCACCGGTTTCCCCGCATAGAGGGCCCTACAGCACTGCACAGGCCTTCTGT
CCCATATCCGGTTTAGATAGTCTGGTAGGTCTGCTTGGGTGCTGAGTTCGAGCTCGACTG
TTGACGGGTACACCCTAAATCGAACGTCGCTCTAAGGTGTGCTGTTCTGCACAATAACTT
GGGTCTGGTTGCGCCGATGATACGGTAAGTCAGCCCAAATACGTGAATCAGTACGGTTAG
CTTGGCGCGTAATGTCACGGTACTCCCGTATACCACCAGTACGTCCGCCTAGCGACGATG
AGGGTAAGATGAATTTGTCGGATGACATCCTAGTTTAAACACTCGGTTTACGGTCATATC
ACCCAGGCAATGGTGAGCTCAACTAATGCCCGGCGATCAAGGAAATAAGCTGCCACTTCC
GCCGTACCGCTCGGACCTCTCTCCGTGATTCATTGGGCCGGTTCCCGCCTCCCTTCTGTG
GCCAACCTGCGCGATGTACGAAGAGGTTTCCGGAAATAACCTATCTCTTGGACGAGTCAA
CCGGGAATTCAGGGTTTCATCGGCTTACCTTCTAAACAACTAAGTACAGCTGTAGCCCTA
GTTGGTATACCTTTTTGC
>Rosalind_0228
AAGAGTCTGGCGGGTGTCATACCCCCGGTGAGGTAATAATTAATCTTAACCACCCAGGCA
CAGACGACTGTAAGTGGCTTGGTTGATGATTAAATGCATACTTTGGTACCTGTGGGATCT
CAACATTAAAAAGAAGAGTGGATGTGCTACGTGGTTATCTGAATGACACCAGGCAGCTTC
TAGTACGGTACAGGTCTCAACAGGATTGGAGCACGTCGCCAGCCGAAGTCGGTATAGCCA
TCTCGAACTACCATCGAGGTTCGGTAGTCCAACTATGATAGAAGCAAAATTGCTTTTTTA
CCTCCAAAATCACGACAAATCGGCTAAGCCCCTAACACCACGCTGGGGCTGCGCTTCCCC
TGTAACTCTTTCAATCACCTAGCGACCACTTTGTTCGGACGGTCATATTTAGGCATCTCA
CGAGTATTCCCCCGATTGTGGCTTTCAGTGTAGTAGCCAAACTTAAAGAAACGGTGAGCC
ACTGTCAAAATTCGTTCTCTCTAAGTAAATCATGCTTATGGCATATTGAAAAACTGGGCC
CAGTTTTAGACACGGCATGAGCTACGAATCAAGCACGCCTCTCCAGCACGAACTGACCCC
TTTAGCATCTGCTGGTGCCAACTGGGTCCTGCGTAACTGTAGGGCAGTGGGGTGACAAAG
GTACCAACATTAAACGTATAGTGAAGCTTATCCGTGGGGATGTAGGATACGATGTCCAGC
TACCTGATATCCTACGAAGTGGGAATTACACCACTTCTTACTCAGCTACATAGGCGATGT
CTGAGTTGTCAGTAAACAGAGTTGCCATCGA
""")

    for k, v in data.items():
        data[k] = compute_gc_content(v)

    max_k = ""
    max_v = 0
    for k, v in data.items():
        if v > max_v:
            max_k = k
            max_v = v
    print(max_k, max_v)